(()=>{"use strict";const e=[{to:"/",label:"Карта"},{to:"/",label:"Авторизация"}],t=(new class{constructor(){}submitHandler=()=>{};addMarkerHandler=()=>{};render(){return'\n\n    <div class="Marker">\n        <form id="marker" onsubmit="submitHandler()">\n            <div class="Input">\n                <label for="adress">Адрес</label>\n                <input id="adress" type="text"/>\n                \n                <label for="company">Название компании</label>\n                <input id="company" type="text"/>\n                \n                <label for="result">Результат</label>\n                <input id="result" type="text"/>\n                \n                <label for="color">Цвет метки</label>\n                <input type="color"/>\n                \n                <button class="Button primary" onsubmit="submitHandler()">Добавить метку</button>\n            </div>\n            \n        </form>\n    </div>\n'}}).render(),n=new class{constructor(e,t){this.menuToggle=document.createElement(e),this.sidebar=document.createElement(t),this.#e(),this.#t()}#e(){this.sidebar.innerHTML=` \n            <nav class="Drawer close" data-type="nav">\n                <ul>\n                    ${e.map(((e,t)=>`\n                <li id=${t}>\n                    <a href="${e.to}">\n                        ${e.label}\n                    </a>\n                </li>\n            `)).join("")}\n                </ul>\n                    ${t}\n            </nav>\n`}#t(){this.clickHandler=this.clickHandler.bind(this),this.menuToggle.addEventListener("click",this.clickHandler),this.toggleIcon=document.createElement("i"),this.menuToggle.classList.add("MenuToggle"),this.toggleIcon.classList.add("fa","fa-bars"),this.menuToggle.append(this.toggleIcon),this.nav=this.sidebar.querySelector('[data-type="nav"]')}clickHandler(e){this.onToggle()}get isOpen(){return this.menuToggle.classList.contains("open")}close(){this.nav.classList.add("close"),this.menuToggle.classList.remove("open"),this.toggleIcon.classList.remove("fa-times"),this.toggleIcon.classList.add("fa-bars")}open(){this.nav.classList.remove("close"),this.menuToggle.classList.add("open"),this.toggleIcon.classList.remove("fa-bars"),this.toggleIcon.classList.add("fa-times")}onToggle(){this.isOpen?this.close():this.open()}}("div","div"),s=document.querySelector("#map");s.append(n.menuToggle),s.append(n.sidebar),ymaps.ready((()=>{const e=["geolocationControl","trafficControl","fullscreenControl","zoomControl","rulerControl","typeSelector"],t=new ymaps.control.SearchControl({options:{float:"right",noPlacemark:!0}}),n=new ymaps.Map("map",{center:[55.7522,37.6156],zoom:10,controls:[t]});(t=>{e.forEach((e=>t.controls.remove(e)))})(n);const s=new ymaps.RemoteObjectManager("https://map-app-ad56e-default-rtdb.europe-west1.firebasedatabase.app/map.json",{clusterize:!0});new ymaps.SuggestView("adress"),s.objects.options.set("preset","islands#blueIcon"),n.geoObjects.add(s)}))})();